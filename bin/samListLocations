#!/bin/bash
#
# script to list the SAM file locations of a set of files
# in a dataset, or similar file selection
#

usage() {

    echo "

     samListLocations [OPTIONS]  <SAMWEB-ARGS>

     Script to take a dataset definition (or other format input
     to samweb list-file-locations) and retrieve the locations
     and rewrite the format to a dCache filespec.

     <SAMWEB-ARGS>
     The arguments to the samweb list-file-locations command

     [OPTIONS]
     -d only files on disk will be printed
     -f files on disk will be printed first, followed by the rest
     -h print this help

     Using the disk options requires a valid x509 cert
     and will cause the script to run slower ( ~200 files per min )

     If nersc file locations are needed, then this must be run
     with \"--filter-nersc\".  If both dcache and nersc locations
     are present, dcache take priority over nersc.

     examples:

     samListLocations --defname dts.mu2e.CePlusEndpoint.MDC2020t.art
     samListLocations -d --dim \"dh.dataset=mcs.mu2e.DS-cosmic-mix-cat.MDC2018i.001002_00000001.art\"

"
}


DODISK=""
DOFIRST=""
DOLOC=""

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
    exit 0
fi

TMPF=""
if [ "$1" == "-d" ]; then
    shift
    DODISK=yes
    DOLOC=tes
elif [ "$1" == "-f" ]; then
    shift
    DOFIRST=yes
    DOLOC=yes
    TMPF=$(mktemp)
fi

[ -z "$MU2E" ] && setup mu2e
[ -z "$SETUP_SAM_WEB_CLIENT" ] && setup sam_web_client
[ -z "$SETUP_DHTOOLS" ] && setup dhtools
if ! voms-proxy-info > /dev/null 2>&1 ; then
    vomsCert > /dev/null 2>&1
fi

TMPL=$(mktemp)

# this might be 
# enstore:/pnfs/...  filename size
# or if the user added --schema=root
# xroot://...  enstore:/pnfs/..  filename  size

# separate "disk" (enstore or dcache) from /pnfs/path
# and put the URI last if it is there
samweb list-file-locations "${@}" |  \
awk '{if(NF==4) print $2" "$3" "$4" "$1; else print $1" "$2" "$3;}' | \
sed -e 's/enstore:/enstore /' -e 's/dcache:/dcache /' -e 's/nersc:/nersc /'   > $TMPL

# loop over unique file names
# TMPL is like
# enstore /pnfs/path filename size <URI>
cat $TMPL | awk '{print $3}' | sort | uniq \
| while read FILENAME
do

   # FSS is a list of locations, dcache first, like
   # dcache /pnfs/path xrootd://...
   FSS=$(cat $TMPL | awk '{if($3=="'$FILENAME'") print $1" "$2" "$5}' | sort )

   # creates tape (/pnfs/mu2e/tape/.../filename) and disk filespecs
   TAPESPEC=$(echo "$FSS" | awk '{ if($1=="enstore") print $2"/'$FILENAME'" }')
   DISKSPEC=$(echo "$FSS" | awk '{ if($1=="dcache") print $2"/'$FILENAME'" }')
   NERSCSPEC=$(echo "$FSS" | awk '{ if($1=="nersc") print $2"/'$FILENAME'" }')
   # find URI, if present
   TAPEURI=$(echo "$FSS" | awk '{ if($1=="enstore") print $3 }')
   # if no URI, then use pnfs path
   [ -z "$TAPEURI" ] && TAPEURI="$TAPESPEC"
   DISKURI=$(echo "$FSS" | awk '{ if($1=="dcache") print $3 }')
   [ -z "$DISKURI" ] && DISKURI="$DISKSPEC"
   # nersc only has NFS access
   NERSCURI=$NERSCSPEC

   FILEURI="none"
   if [ "$DISKSPEC" ]; then
       FILESPEC="$DISKSPEC"
       FILEURI="$DISKURI"
       LOC="ONLINE"
   elif [ "$TAPESPEC" ]; then
       FILESPEC="$TAPESPEC"
       FILEURI="$TAPEURI"
       LOC=""
       if [ $DOLOC ]; then
           # have to see if tape-backed is on disk
           LOC=$( dcacheFileInfo -l $FILESPEC )
       fi
   elif [ "$NERSCSPEC" ]; then
       # only consider nersc location if it is the only one
       FILESPEC="$NERSCSPEC"
       FILEURI="$NERSCURI"
       LOC="ONLINE"
   fi

   if [ $DODISK ]; then
       [[ "$LOC" =~ "ONLINE" ]] && echo "$FILEURI"
   elif [ $DOFIRST ]; then
       if [[ "$LOC" =~ "ONLINE" ]]; then
           echo "$FILEURI"
       else
           echo "$FILEURI" >> $TMPF
       fi
   else
       echo "$FILEURI"
   fi

done

if [ $DOFIRST ]; then
    cat $TMPF
    rm -f $TMPF
fi
rm -f $TMPL
rm -f $TMPF

exit 0
